{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","isTodoSelected","type","onClick","TodoFilter","query","setQuery","setFilter","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","user","isLoading","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","filterStatus","setFilterStatus","setUser","setIsLoading","errorMessage","setErrorMessage","useEffect","items","catch","finally","userId","filteredTodos","useMemo","filtered","filter","trim","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c673c1a1.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, completed, title } = todo;\n        const isTodoSelected = selectedTodo?.id === id;\n\n        return (\n          <tr data-cy=\"todo\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    isTodoSelected ? 'far fa-eye-slash' : 'far fa-eye'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Filter } from '../../types/Filter';\n\ntype TodoFilterProps = {\n  query: string,\n  setQuery: (query: string) => void,\n  setFilter: (status: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  query,\n  setQuery,\n  setFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilter(event.target.value as Filter)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype TodoModalProps = {\n  user: User | null,\n  selectedTodo: Todo,\n  setSelectedTodo: ((todo: Todo | null) => void),\n  isLoading: boolean,\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  user,\n  selectedTodo,\n  setSelectedTodo,\n  isLoading,\n}) => {\n  const { id, title, completed } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { getTodos, getUser } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [filterStatus, setFilterStatus] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(items => setTodos(items))\n      .catch(() => setErrorMessage('There are no todos'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setIsLoading(true);\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [selectedTodo]);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let filtered = [...todos];\n\n    switch (filterStatus) {\n      case Filter.Active:\n        filtered = filtered.filter(todo => !todo.completed);\n        break;\n      case Filter.Completed:\n        filtered = filtered.filter(todo => todo.completed);\n        break;\n      case Filter.All:\n      default:\n        break;\n    }\n\n    if (query.trim()) {\n      filtered = filtered.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return filtered;\n  }, [todos, filterStatus, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilterStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && !selectedTodo\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n\n            </div>\n\n            {errorMessage && (\n              <div className=\"notification is-danger\">\n                {errorMessage}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          isLoading={isLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}